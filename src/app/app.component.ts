import { Component } from "@angular/core";
import createReport from "docx-templates";
import { saveAs } from "file-saver";

@Component({
  selector: "my-app",
  templateUrl: "./app.component.html",
  styleUrls: ["./app.component.css"]
})
export class AppComponent {
  constructor() {
    var raw = window.atob(this.encodedString);
    var rawLength = raw.length;
    this.array = new Uint8Array(new ArrayBuffer(rawLength));

    for (let i = 0; i < rawLength; i++) {
      this.array[i] = raw.charCodeAt(i);
    }

    var binary_string = window.atob(this.encodedString);
    var len = binary_string.length;
    var bytes = new Uint8Array(len);
    for (var i = 0; i < len; i++) {
      bytes[i] = binary_string.charCodeAt(i);
    }
    this.array = bytes.buffer;

   
  }
  reader: FileReader;
  array: any;

  async loadFileinMemory() {
 this.report = await createReport({
      template: this.array,
      noSandbox: true
    });
  }

  encodedString = ``;

  dataURLtoFile(dataurl, filename) {
    var arr = dataurl.split(","),
      mime =
        "application/vnd.openxmlformats-officedocument.wordprocessingml.document",
      bstr = atob(arr[0]),
      n = bstr.length,
      u8arr = new Uint8Array(n);
    while (n--) {
      u8arr[n] = bstr.charCodeAt(n);
    }
    return new File([u8arr], filename, { type: mime });
  }
  report: any;

  async onFileLoad(e) {
    console.log(e.target.files[0]);
    this.reader = new FileReader();
    await this.readFileIntoArrayBuffer(e.target.files[0]);
    this.report = await createReport({
      template: this.reader.result,
      output: "output.docx",
      data: {},
      noSandbox: true
    });
  }

  download() {
    this.saveDataToFile(
      this.report,
      "report.docx",
      "application/vnd.openxmlformats-officedocument.wordprocessingml.document"
    );
  }

  readFileIntoArrayBuffer = async fd =>
    new Promise((resolve, reject) => {
      this.reader.onerror = reject;
      this.reader.onload = () => {
        resolve(this.reader.result);
      };
      this.reader.readAsArrayBuffer(fd);
    });

  saveDataToFile = (data, fileName, mimeType) => {
    const blob = new Blob([data], { type: mimeType });
    const url = window.URL.createObjectURL(blob);
    this.downloadURL(url, fileName);
    setTimeout(() => {
      window.URL.revokeObjectURL(url);
    }, 1000);
  };

  downloadURL = (data, fileName) => {
    const a = document.createElement("a");
    a.href = data;
    a.download = fileName;
    document.body.appendChild(a);
    a.style.display = "none";
    a.click();
    a.remove();
  };
}
